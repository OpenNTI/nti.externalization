name: tests

on: [push, pull_request]

env:
  PYTHONHASHSEED: 1042466059
  ZOPE_INTERFACE_STRICT_IRO: 1
  CFLAGS: "-Ofast -pipe -fomit-frame-pointer -march=native"
  PIP_UPGRADE_STRATEGY: eager


jobs:
  test:
    strategy:
      matrix:
        python-version:
          - "pypy-3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        extras:
          - "[test,docs]"
        # include:
        #   - python-version: "3.13"
        #     extras: "[test,docs,gevent,pyramid]"

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'setup.py'
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U coverage
        python -m pip install -v -U -e ".${{ matrix.extras }}"
    - name: Test
      run: |
        python -m coverage run -m zope.testrunner --test-path=src  --auto-color --auto-progress
        PURE_PYTHON=1 coverage run -a -m zope.testrunner --test-path=src  --auto-color --auto-progress
        coverage run -a -m sphinx -b doctest -d docs/_build/doctrees docs docs/_build/doctests
        coverage combine || true
        coverage report -i || true
    - name: Lint
      if: matrix.python-version == '3.12'
      run: |
        python -m pip install -U pylint
        pylint src
    - name: Submit to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        parallel: true

  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true


  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true

  manylinux:

    runs-on: ubuntu-latest
    # We use a regular Python matrix entry to share as much code as possible.
    strategy:
      matrix:
        python-version: [3.12]
        image:
          - manylinux_2_28_x86_64
          - manylinux2014_aarch64
          - manylinux2014_ppc64le
          - manylinux2014_s390x
          - manylinux2014_x86_64
          - musllinux_1_1_x86_64
          - musllinux_1_1_aarch64
    name: ${{ matrix.image }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Build and test greenlet
        env:
          DOCKER_IMAGE: quay.io/pypa/${{ matrix.image }}
        run: bash ./make-manylinux
      - name: Store greenlet wheels
        uses: actions/upload-artifact@v4
        with:
          path: wheelhouse/*whl
          name: ${{ matrix.image }}_wheels.zip
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.10.1
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.TWINE_PASSWORD }}
          skip_existing: true
          packages_dir: wheelhouse/
