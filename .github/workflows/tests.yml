name: tests

on: [push, pull_request]

env:
  PYTHONHASHSEED: 1042466059
  ZOPE_INTERFACE_STRICT_IRO: 1
  CFLAGS: "-Ofast -pipe -fomit-frame-pointer -march=native"
  PIP_UPGRADE_STRATEGY: eager


jobs:
  test:
    strategy:
      matrix:
        python-version: [2.7, pypy2, pypy3, 3.6, 3.7, 3.8, 3.9]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.*') }}-${{ matrix.python-version }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U coverage
        python -m pip install -U -e ".[test,docs]"
    - name: Test
      run: |
        coverage run -m zope.testrunner --test-path=src  --auto-color --auto-progress
        PURE_PYTHON=1 coverage run -a -m zope.testrunner --test-path=src  --auto-color --auto-progress
    - name: Sphinx DocTests
      if: matrix.python-version != 2.7 && matrix.python-version != 'pypy2'
      # These do still run on Python 2 (test_docs.py) but they need an output normalizer,
      # which Sphinx doesn't easily do. We could add :pyversion: directives everywhere,
      # but that seems like overkill
      run: |
        coverage run -a -m sphinx -b doctest -d docs/_build/doctrees docs docs/_build/doctests
        PURE_PYTHON=1 coverage run -a -m sphinx -b doctest -d docs/_build/doctrees docs docs/_build/doctests

    - name: Submit to Coveralls
      # This is a container action, which only runs on Linux.
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true
    - name: Lint (Python 3.9)
      if: matrix.python-version == 3.9 && startsWith(runner.os, 'Linux')
      # We only need to do this on one version, and it should be Python 3, because
      # pylint has stopped updating for Python 2.
      # We do this here rather than a separate job to avoid the compilation overhead.
      # TODO: Revisit this when we have caching of that part.
      run: |
        pip install -U -e .[lint]
        python -m pylint --rcfile=.pylintrc nti.externalization

  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true
